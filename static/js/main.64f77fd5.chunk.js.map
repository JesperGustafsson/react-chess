{"version":3,"sources":["components/square.js","components/board.js","components/fallen-soldier-block.js","pieces/piece.js","pieces/bishop.js","pieces/king.js","pieces/knight.js","pieces/pawn.js","pieces/queen.js","pieces/rook.js","pieces/rock.js","pieces/obstacle.js","helpers/board-initialiser.js","components/game.js","index.js"],"names":["Square","props","className","shade","onClick","style","image","hp","atk","Board","row","col","squareShade","pos","this","squares","console","log","html_board","length","html_row","isEven","push","renderSquare","React","Component","num","FallenSoldierBlock","square","i","keyVal","piece","whiteFallenSoldiers","map","ws","index","blackFallenSoldiers","bs","Piece","player","iconUrl","backgroundImage","dirX","dirY","srcX","srcY","steps","destX","destY","Bishop","src","dest","nextX","nextY","nextStep","step","Math","abs","King","isKing","Knight","Pawn","initialPositions","1","2","Queen","Rook","mod","diff","Rock","initialiseChessBoard","rows","split","Array","rowArray","fill","squareArray","Game","state","attackingPiece","defendingPiece","PHASE","status","turn","gameOver","setState","isMoveLegal","constructor","name","handleClick","id","backgroundColor","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64f77fd5.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\n\r\nexport default function Square(props) {\r\n    return (\r\n      <button className={\"square \" + props.shade}\r\n      onClick={props.onClick}\r\n      style={props.image}>\r\n        <div className = \"hp-atk\">\r\n          <span className=\"hp\">\r\n            {props.hp &&\r\n            props.hp}\r\n          </span>\r\n          <span className=\"atk\">\r\n            {props.hp && props.atk\r\n            }\r\n          </span>\r\n        </div>\r\n      </button>\r\n    );\r\n  \r\n}","import React from 'react';\r\n\r\nimport '../index.css';\r\nimport Square from './square.js';\r\n\r\nexport default class Board extends React.Component {\r\n\r\n  renderSquare(row, col, squareShade) {\r\n\r\n    const pos = [row, col];\r\n    return <Square \r\n    //piece = {this.props.squares[i]} \r\n    image = {this.props.squares[row][col]? this.props.squares[row][col].image : null}\r\n    shade = {squareShade}\r\n    hp = {this.props.squares[row][col] ? this.props.squares[row][col].hp : null}\r\n    atk = {this.props.squares[row][col] ? this.props.squares[row][col].atk : null}\r\n\r\n    onClick={() => this.props.onClick(pos)}\r\n    />\r\n  }\r\n\r\n   render() {\r\n    console.log(\"BOARD UPDATE\")\r\n    const html_board = [];\r\n    for(let row = 0; row < this.props.squares.length; row++){\r\n      const html_row = [];\r\n      for(let col = 0; col < this.props.squares[row].length; col++){\r\n        const squareShade = (isEven(row) === isEven(col)) ? \"light-square\" : \"dark-square\";\r\n        html_row.push(this.renderSquare(row, col, squareShade));\r\n      }\r\n      html_board.push(<div className=\"board-row\">{html_row}</div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {html_board}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nfunction isEven(num){\r\n  return num % 2 === 0\r\n}","import React from 'react';\r\n\r\nimport '../index.css';\r\nimport Square from './square.js';\r\n\r\nexport default class FallenSoldierBlock extends React.Component {\r\n\r\n  renderSquare(square, i, squareShade) {\r\n    return <Square\r\n      key={i}\r\n      keyVal={i}\r\n      piece={square}\r\n      style={square.image}\r\n    />\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">{this.props.whiteFallenSoldiers.map((ws, index) =>\r\n          this.renderSquare(ws, index)\r\n        )}</div>\r\n        <div className=\"board-row\">{this.props.blackFallenSoldiers.map((bs, index) =>\r\n          this.renderSquare(bs, index)\r\n        )}</div>\r\n      </div>\r\n    );\r\n  }\r\n}","export default class Piece {\r\n    constructor(player, iconUrl){\r\n      this.player = player;\r\n      //this.style = {backgroundImage: \"url('\"+iconUrl+\"')\"};\r\n      this.image = {backgroundImage: \"url('\"+iconUrl+\"')\"};\r\n      this.hp = 3;\r\n      this.atk = 2;\r\n    }\r\n\r\n    step(dirX, dirY, srcX, srcY, steps = 1) {\r\n      let destX = srcX + dirX*steps;\r\n      let destY = srcY + dirY*steps;\r\n  \r\n      console.log(`destX: ${destX}, destY: ${destY}`);\r\n  \r\n      return [destX, destY];\r\n    }\r\n    \r\n  }","import Piece from './piece.js';\r\n\r\nexport default class Bishop extends Piece {\r\n  constructor(player){\r\n    super(player, (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\"));\r\n  }\r\n  \r\n  isMoveLegal(src, dest, squares) {\r\n\r\n    const srcY = src[0];\r\n    const srcX = src[1];\r\n    const destY = dest[0];\r\n    const destX = dest[1];\r\n\r\n    let dirX = destX > srcX ? 1 : destX < srcX ? -1 : 0;  //X-axis direction\r\n    let dirY = destY > srcY ? 1 : destY < srcY ? -1 : 0;  //Y-axis direction\r\n    let nextX = srcX;\r\n    let nextY = srcY;\r\n\r\n    let nextStep = this.step(dirX, dirY, nextX, nextY, 1);\r\n    nextX = nextStep[0];\r\n    nextY = nextStep[1];\r\n\r\n    console.log(`srcX: ${srcX}, srcY: ${srcY}, destX: ${destX}, destY: ${destY}`)\r\n\r\n\r\n    if (Math.abs(destX - srcX) === (Math.abs(destY - srcY))) {\r\n\r\n      while (nextX !== destX || nextY !== destY){\r\n        console.log(`nextX: ${nextX}, nextY: ${nextY}`)\r\n\r\n        if (!(squares[nextY][nextX] == null)) {\r\n          console.log(\"STEP FAIL\");\r\n          return false;\r\n        }\r\n        console.log(\"STEP OK\");\r\n        \r\n        let nextStep = this.step(dirX, dirY, nextX, nextY, 1);\r\n        nextX = nextStep[0];\r\n        nextY = nextStep[1];\r\n\r\n      }\r\n      return true;\r\n    }\r\n\r\n\r\n    return false;\r\n  }\r\n}","import Piece from './piece.js';\r\n\r\nexport default class King extends Piece {\r\n\r\n    constructor(player){\r\n      super(\r\n        player, \r\n        (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg\")\r\n        );\r\n        this.hp = 12;\r\n        this.isKing = true;\r\n    }\r\n    \r\n    isMoveLegal(src, dest) {\r\n    /*  MOVE PATTERN\r\n           OOO\r\n           OPO\r\n           OOO\r\n    */\r\n    const srcY = src[0];\r\n    const srcX = src[1];\r\n    const destY = dest[0];\r\n    const destX = dest[1];\r\n\r\n    console.log(`srcX: ${srcX}, srcY: ${srcY}, destX: ${destX}, destY: ${destY}`)\r\n\r\n    if (Math.abs(destY - srcY) <= 1 && Math.abs(destX - srcX) <= 1) {\r\n      return true;\r\n    }\r\n    return false;\r\n      }\r\n}","import Piece from './piece.js';\r\n\r\nexport default class Knight extends Piece {\r\n  constructor(player){\r\n    super(player, (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg\"));\r\n  }\r\n\r\n  isMoveLegal(src, dest) {\r\n    /*  MOVE PATTERN\r\n           XOXOX\r\n           OXXXO\r\n           XXPXX\r\n           OXXXO\r\n           XOXOX\r\n    */\r\n    const srcY = src[0];\r\n    const srcX = src[1];\r\n    const destY = dest[0];\r\n    const destX = dest[1];\r\n\r\n    if ((Math.abs(destY - srcY) === 2 && Math.abs(destX - srcX) === 1) ||\r\n        (Math.abs(destX - srcX) === 2 && Math.abs(destY - srcY) === 1)) {\r\n          return true;\r\n    }\r\n    return false;\r\n  }\r\n}","import Piece from './piece.js';\r\n\r\nexport default class Pawn extends Piece {\r\n  constructor(player){\r\n    super(player, (player === 1?  \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\"));\r\n    this.initialPositions = {\r\n      1: [48, 49, 50, 51, 52, 53, 54, 55],\r\n      2: [8, 9, 10, 11, 12, 13, 14, 15]\r\n    }\r\n  }\r\n\r\n  isMoveLegal(src, dest) {\r\n    /*  MOVE PATTERN\r\n           OOO\r\n           XPX\r\n           XXX\r\n    */\r\n    const srcY = src[0];\r\n    const srcX = src[1];\r\n    const destY = dest[0];\r\n    const destX = dest[1];\r\n\r\n    console.log(`srcX: ${srcX}, srcY: ${srcY}, destX: ${destX}, destY: ${destY}`)\r\n\r\n    if (destY == srcY - 1*(-1*this.player)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}","import Piece from './piece.js';\r\n\r\nexport default class Queen extends Piece {\r\n  constructor(player){\r\n    super(player, (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg\"));\r\n    this.atk = 5;\r\n    this.hp = 10;\r\n  }\r\n\r\n  isMoveLegal(src, dest, squares) {\r\n    // Possible movement: straight(max), diagonal(max)\r\n    \r\n    let destX = dest[0];\r\n    let destY = dest[1];\r\n    let srcX = src[0];\r\n    let srcY = src[1];\r\n\r\n    console.log(`srcX: ${srcX}, srcY: ${srcY}, destX: ${destX}, destY: ${destY}`)\r\n\r\n\r\n    // Move  (Horizontal || Vertical) || Diagonal \r\n    if (!((srcX === destX || srcY === destY) || (Math.abs(destX - srcX)) === (Math.abs(destY - srcY)))) {\r\n      return false;\r\n    } else {\r\n      let dirX = destX > srcX ? 1 : destX < srcX ? -1 : 0;  //X-axis direction\r\n      let dirY = destY > srcY ? 1 : destY < srcY ? -1 : 0;  //Y-axis direction\r\n      let nextX = srcX;\r\n      let nextY = srcY;\r\n  \r\n      let nextStep = this.step(dirX, dirY, nextX, nextY, 1);\r\n      nextX = nextStep[0];\r\n      nextY = nextStep[1];\r\n\r\n      while (nextX !== destX || nextY !== destY){\r\n\r\n          if (!(squares[nextX][nextY] == null)) return false;\r\n          \r\n          let nextStep = this.step(dirX, dirY, nextX, nextY, 1);\r\n          nextX = nextStep[0];\r\n          nextY = nextStep[1];\r\n      }\r\n      \r\n      return true;      \r\n\r\n    }\r\n  }\r\n}","import Piece from './piece.js';\r\n\r\nexport default class Rook extends Piece {\r\n  constructor(player){\r\n    super(player, (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"));\r\n  }\r\n  isMoveLegal(src, dest, squares) {\r\n    const srcY = src[0];\r\n    const srcX = src[1];\r\n    const destY = dest[0];\r\n    const destX = dest[1];\r\n\r\n    let dirX = destX > srcX ? 1 : destX < srcX ? -1 : 0;  //X-axis direction\r\n    let dirY = destY > srcY ? 1 : destY < srcY ? -1 : 0;  //Y-axis direction\r\n    let nextX = srcX;\r\n    let nextY = srcY;\r\n\r\n    let nextStep = this.step(dirX, dirY, nextX, nextY, 1);\r\n    nextX = nextStep[0];\r\n    nextY = nextStep[1];\r\n\r\n    console.log(`srcX: ${srcX}, srcY: ${srcY}, destX: ${destX}, destY: ${destY}`)\r\n\r\n    if (srcX === destX || srcY === destY) {\r\n\r\n      while (nextX !== destX || nextY !== destY){\r\n        console.log(`nextX: ${nextX}, nextY: ${nextY}`)\r\n\r\n        if (!(squares[nextY][nextX] == null)) {\r\n          console.log(\"STEP FAIL\");\r\n          return false;\r\n        }\r\n        console.log(\"STEP OK\");\r\n        \r\n        let nextStep = this.step(dirX, dirY, nextX, nextY, 1);\r\n        nextX = nextStep[0];\r\n        nextY = nextStep[1];\r\n\r\n      }\r\n      return true;\r\n    }\r\n\r\n\r\n    return false;\r\n  }\r\n  isMovePossible(src, dest){\r\n    let mod = src % 8;\r\n    let diff = 8 - mod;\r\n    return (Math.abs(src - dest) % 8 === 0 || (dest >= (src - mod) && dest < (src + diff)));\r\n  }\r\n\r\n  /**\r\n   * get path between src and dest (src and dest exclusive)\r\n   * @param  {num} src  \r\n   * @param  {num} dest \r\n   * @return {[array]}      \r\n   */\r\n}","import Obstacle from './obstacle.js';\r\nexport default class Rock extends Obstacle {\r\n    constructor(player){\r\n        //super(player,\"react-chess/src/pieces/rock.png\");\r\n        super(player, \"http://t3.gstatic.com/images?q=tbn:ANd9GcReN9KWqKEGl0uRkdBWgcl-LaLK_8ecIzuBAhVBx9H82E40amLbEMYrZTc5fsgf4jxEpbAJaaV5znMbXHevmM0\");\r\n    }\r\n}\r\n","export default class Obstacle {\r\n    constructor(player, iconUrl) {\r\n        this.image = {backgroundImage: \"url(\"+iconUrl+\")\"};\r\n        this.player = player;\r\n    }\r\n}","import Bishop from '../pieces/bishop.js';\r\nimport King from '../pieces/king.js';\r\nimport Knight from '../pieces/knight.js';\r\nimport Pawn from '../pieces/pawn.js';\r\nimport Queen from '../pieces/queen.js';\r\nimport Rook from '../pieces/rook.js';\r\nimport Rock from '../pieces/rock.js';\r\n\r\nconst A = 0;\r\nconst B = 1;\r\nconst C = 2;\r\n/*\r\nexport default function initialiseChessBoard() {\r\n  const squares = Array(72).fill(null);\r\n\r\n  for (let i = 8; i < 16; i++) {\r\n    squares[i] = new Pawn(2);\r\n    squares[i + 40] = new Pawn(1);\r\n  }\r\n  squares[0] = new Rook(2);\r\n  squares[7] = new Rook(2);\r\n  squares[56] = new Rook(1);\r\n  squares[63] = new Rook(1);\r\n\r\n  squares[1] = new Knight(2);\r\n  squares[6] = new Knight(2);\r\n  squares[57] = new Knight(1);\r\n  squares[62] = new Knight(1);\r\n\r\n  squares[2] = new Bishop(2);\r\n  squares[5] = new Bishop(2);\r\n  squares[58] = new Bishop(1);\r\n  squares[61] = new Bishop(1);\r\n\r\n  squares[3] = new Queen(2);\r\n  squares[4] = new King(2);\r\n\r\n  squares[59] = new Queen(1);\r\n  squares[60] = new King(1);\r\n\r\n  return squares;\r\n\r\n}\r\n*/\r\n/*\r\nexport default function initialiseChessBoard() {\r\n  const squares = Array(8).fill(0).map(row => new Array(9).fill(null));\r\n  console.log(squares);\r\n\r\n  //ROOKS\r\n  squares[0][0] = new Rook(2);\r\n  squares[0][8] = new Rook(2);\r\n  squares[7][0] = new Rook(1);\r\n  squares[7][8] = new Rook(1);\r\n  \r\n  //KNIGHT\r\n  squares[0][1] = new Knight(2);\r\n  squares[0][7] = new Knight(2);\r\n  squares[7][1] = new Knight(1);\r\n  squares[7][7] = new Knight(1);\r\n  \r\n  //BISHOP\r\n  squares[0][2] = new Bishop(2);\r\n  squares[0][6] = new Bishop(2);\r\n  squares[7][2] = new Bishop(1);\r\n  squares[7][6] = new Bishop(1);\r\n\r\n  //QUEEN&KING\r\n  squares[0][3] = new Queen(2);\r\n  squares[0][5] = new King(2);\r\n  squares[7][3] = new Queen(1);\r\n  squares[7][5] = new King(1);\r\n\r\n  //PAWNS\r\n  for (let i = 0; i < squares[0].length; i++) {\r\n    if (i !== 4) {\r\n      squares[1][i] = new Pawn(2);\r\n      squares[6][i] = new Pawn(1);\r\n    }\r\n  }\r\n\r\n  return squares;\r\n\r\n}\r\n*/\r\n/*\r\nexport default function initialiseChessBoard() {\r\n\r\n  const squares = [\r\n    [new Rook(2), new Knight(2), new Bishop(2), new Queen(2), new King(2), new Bishop(2), new Knight(2), new Rook(2)],\r\n    [new Pawn(2), new Pawn(2),   new Pawn(2),   new Pawn(2),  new Pawn(2), new Pawn(2),   new Pawn(2),   new Pawn(2)],\r\n    [null,        null,          null,          null,         null,        null,          null,          null],\r\n    [null,        null,          null,          null,         null,        null,          null,          null],\r\n    [null,        null,          null,          null,         null,        null,          null,          null],\r\n    [null,        null,          null,          null,         null,        null,          null,          null],\r\n    [new Rook(1), new Knight(1), new Bishop(1), new Queen(1), new King(1), new Bishop(1), new Knight(1), new Rook(1)],\r\n    [new Pawn(1), new Pawn(1),   new Pawn(1),   new Pawn(1),  new Pawn(1), new Pawn(1),   new Pawn(1),   new Pawn(1)]\r\n  ];\r\n\r\n  return squares;\r\n\r\n}\r\n*/\r\nexport default function initialiseChessBoard() {\r\n\r\n  /* higher-case: WHITE, lower-case: BLACK\r\n  \r\n    - = Empty\r\n    P = Pawn\r\n    R = Rook\r\n    K = Knight\r\n    B = Bishop\r\n    Q = Queen\r\n    X = King\r\n        \r\n\r\n\r\n\r\n  */\r\n\r\n  const positions =\"----------- \"\r\n                  +\"-RKBQ-XBKR- \"\r\n                  +\"-PPPP-PPPP- \"\r\n                  +\"--##------- \"\r\n                  +\"--#----#--- \"\r\n                  +\"----------- \"\r\n                  +\"-#---##---# \"\r\n                  +\"-pppp-pppp- \"\r\n                  +\"-rkbq-xbkr- \"\r\n                  +\"-----------\"\r\n  //Splits into an array with each row\r\n  const rows = positions.split(\" \");\r\n  \r\n  //Makes an array SQUARES with length of ROWS\r\n  const squares = new Array(rows.length);\r\n  \r\n  //For each row\r\n  for (let row = 0; row < squares.length; row++) {\r\n\r\n    //Puts an array rowARRAY(cols) into each element of SQUARES(rows)\r\n    const rowArray = new Array(rows[row]).fill(null);\r\n    squares[row] = rowArray;\r\n    \r\n    //Splits the row-string into an array, each element being a square\r\n    const squareArray = rows[row].split(\"\");\r\n\r\n    for (let col = 0; col < squareArray.length; col++) {\r\n      \r\n      const square = squareArray[col];\r\n      switch(square) {\r\n\r\n        case '#':\r\n          squares[row][col] = new Rock(2);\r\n          break;\r\n\r\n        case 'r':\r\n          squares[row][col] = new Rook(-1);\r\n          break;      \r\n        case 'R':\r\n          squares[row][col] = new Rook(1);\r\n          break;\r\n        \r\n        case 'b': \r\n          squares[row][col] = new Bishop(-1);\r\n          break;\r\n        case 'B': \r\n          squares[row][col] = new Bishop(1);\r\n          break;\r\n\r\n        case 'k':\r\n          squares[row][col] = new Knight(-1);\r\n          break;\r\n        case 'K':\r\n          squares[row][col] = new Knight(1);\r\n          break;\r\n\r\n        case 'q': \r\n          squares[row][col] = new Queen(-1);\r\n          break;\r\n        case 'Q': \r\n          squares[row][col] = new Queen(1);\r\n          break;\r\n\r\n        case 'x': \r\n          squares[row][col] = new King(-1);\r\n          break;\r\n        case 'X': \r\n          squares[row][col] = new King(1);\r\n          break;\r\n          \r\n        case 'p': \r\n          squares[row][col] = new Pawn(-1);\r\n          break;\r\n        case 'P': \r\n          squares[row][col] = new Pawn(1);\r\n          break;\r\n\r\n        default: \r\n          squares[row][col] = null;\r\n          break;\r\n\r\n            \r\n      }\r\n\r\n\r\n      \r\n    }\r\n  }\r\n\r\n  console.log(squares);\r\n  \r\n  return squares;\r\n\r\n}","import React from 'react';\r\nimport '../index.css';\r\nimport Board from './board.js';\r\nimport FallenSoldierBlock from './fallen-soldier-block.js';\r\nimport initialiseChessBoard from '../helpers/board-initialiser.js';\r\n\r\nexport default class Game extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      squares: initialiseChessBoard(),\r\n      whiteFallenSoldiers: [],\r\n      blackFallenSoldiers: [],\r\n      player: 1,\r\n      attackingPiece: -1,\r\n      defendingPiece: -1,\r\n      PHASE: \"PICKING\",\r\n      status: '',\r\n      turn: 'white',\r\n      gameOver: false\r\n    }\r\n  }\r\n \r\n  handleClick(pos){\r\n\r\n    const row = pos[0];\r\n    const col = pos[1];\r\n    console.log(`CLICK... PHASE: ${this.state.PHASE}`);\r\n    //Clicks on board\r\n    const squares = this.state.squares;\r\n    \r\n    //Selection click\r\n    if(this.state.PHASE === \"PICKING\"){\r\n\r\n      //Picks own piece\r\n      if(squares[row][col] && (squares[row][col].player === this.state.player)) {\r\n        this.setState({\r\n          status: \"Select Destination\",\r\n          attackingPiece: pos,\r\n          PHASE: \"ATTACKING\"\r\n        });\r\n      }\r\n\r\n      //Picks not own piece\r\n      else {\r\n        this.setState({\r\n          status: \"Wrong Selection, pick your own piece\",    \r\n        });\r\n      }\r\n    }\r\n\r\n    /*\r\n\r\n      DESTINATION CLICK START\r\n      IF ALLY: FAIL (YOU CANNOT MOVE TO YOUR OWN PIECE) -> PHASE: PICKING\r\n      IF OBST: FAIL (YOU CANNOT MOVE TO OBSTACLE) -> PHASE: PICKING\r\n      ELSE CHECKLEGAL\r\n        IF LEGAL\r\n          MOVE / COMBAT \r\n            IF KING ALIVE -> PHASE: PICKING\r\n            ELSE -> PHASE: GAMEOVER\r\n        ELSE \r\n          FAIL (PIECE CANNOT MOVE THERE) -> PHASE: PICKING\r\n\r\n\r\n\r\n\r\n    */\r\n\r\n\r\n    \r\n    //Destination Click\r\n    else if (this.state.PHASE === \"ATTACKING\") {\r\n     \r\n      const isMoveLegal = squares[this.state.attackingPiece[0]][this.state.attackingPiece[1]].isMoveLegal(this.state.attackingPiece, pos, squares);\r\n      \r\n\r\n      //Invalid click (Self)\r\n      if (squares[row][col] && squares[row][col].player && squares[row][col].player == this.state.player) {\r\n        console.log(\"Invalid click: Self\");\r\n        this.setState(\r\n          { status: `You cannot move to your own piece, choose another piece`,\r\n          PHASE: \"PICKING\" },\r\n          function () {\r\n            console.log(this.state.PHASE);  \r\n          }\r\n        );\r\n      }\r\n\r\n      //Invalid click (Obstacle)\r\n      else if (squares[row][col] && squares[row][col].player && squares[row][col].player == 2) {\r\n        console.log(\"Invalid click: Obstacle\");\r\n        this.setState(\r\n          { status: `Your ${this.state.attackingPiece.constructor.name} cannot move there, choose another piece`,\r\n          PHASE: \"PICKING\" },\r\n          function () {\r\n            console.log(this.state.PHASE);  \r\n          }\r\n        );\r\n      }\r\n\r\n      //Invalid click (Move not legal)\r\n      else if (!isMoveLegal) {\r\n        console.log(`Your ${this.state.attackingPiece.constructor.name} cannot move there, choose another piece`);\r\n        this.setState(\r\n          { status: `Your ${this.state.attackingPiece.constructor.name} cannot move there, choose another piece`,\r\n          PHASE: \"PICKING\" },\r\n          function () {\r\n            console.log(this.state.PHASE);  \r\n          }\r\n        );\r\n      }\r\n\r\n      //Valid click (Empty)\r\n      else if (squares[row][col] == null) {\r\n\r\n        squares[row][col] = squares[this.state.attackingPiece[0]][this.state.attackingPiece[1]]\r\n        squares[this.state.attackingPiece[0]][this.state.attackingPiece[1]] = null;\r\n       \r\n        this.setState({\r\n          status: `${this.state.turn === \"white\" ? \"Black's\" : \"White's\"} turn to move`,\r\n          PHASE: \"PICKING\",\r\n          player: this.state.player*-1,\r\n          turn: this.state.turn === \"white\" ? \"black\": \"white\"\r\n        }, function () {\r\n          console.log(this.state.PHASE);  \r\n        });    \r\n      }\r\n\r\n      //Valid click (Enemy)\r\n      else if (squares[row][col].player && squares[row][col].player == this.state.player*-1) { \r\n\r\n        let defendingPiece = squares[row][col];\r\n        console.log(`ATTACKED OBJECT: ${defendingPiece.constructor}`);\r\n        console.log(`isKing?: ${defendingPiece.isKing}`);\r\n        let attackingPiece = squares[this.state.attackingPiece[0]][this.state.attackingPiece[1]]\r\n\r\n        //COMBAT\r\n        defendingPiece.hp -= attackingPiece.atk;\r\n        this.setState({\r\n          status: `${this.state.turn === \"white\" ? \"Black's\" : \"White's\"} turn to move`,\r\n          PHASE: \"PICKING\",\r\n          player: this.state.player*-1,\r\n          turn: this.state.turn === \"white\" ? \"black\": \"white\"\r\n        }, function () {\r\n          console.log(this.state.PHASE);  \r\n        });   \r\n\r\n        if (!defendingPiece.hp || defendingPiece.hp < 0) {\r\n          if (defendingPiece.isKing) {\r\n            console.log(`It's Game Over, bitch.1`);\r\n            this.setState({\r\n              status: `Game over. ${this.state.turn === \"white\" ? \"Black\" : \"White\"} has won the game.`,\r\n              PHASE: \"GAMEOVER\",\r\n            }, function () {\r\n              console.log(`It's Game Over, bitch.2`);\r\n              console.log(`It's Game Over, bitch.3 ${this.state.PHASE}`);  \r\n            });   \r\n          }\r\n          squares[row][col] = squares[this.state.attackingPiece[0]][this.state.attackingPiece[1]];\r\n          squares[this.state.attackingPiece[0]][this.state.attackingPiece[1]] = null;\r\n        }\r\n      }\r\n\r\n      else {\r\n        console.log(\"Unknown Click\")\r\n      }\r\n    }\r\n\r\n    else {\r\n      console.log(`GAME OVER!!!++ ${this.state.PHASE}`)\r\n      this.setState({\r\n        status: `Player ${this.state.turn} wins`,\r\n      })\r\n    }\r\n\r\n    console.log(`END OF PHASE : ${this.state.PHASE}`)\r\n\r\n  }\r\n\r\n  /**\r\n   * Check all path indices are null. For one steps move of pawn/others or jumping moves of knight array is empty, so  move is legal.\r\n   * @param  {[type]}  srcToDestPath [array of board in dices comprising path between src and dest ]\r\n   * @return {Boolean}               \r\n   */\r\n\r\n  render() {\r\n    console.log(\"GAME UPDATE\")\r\n    return (\r\n      <div>\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n            squares = {this.state.squares}\r\n            onClick = {(i) => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <h3>Turn</h3>\r\n            <div id=\"player-turn-box\" style={{backgroundColor: this.state.turn}}>\r\n  \r\n            </div>\r\n            <div className=\"game-status\">{this.state.status}</div>\r\n\r\n            <div className=\"fallen-soldier-block\">\r\n              \r\n              {<FallenSoldierBlock\r\n              whiteFallenSoldiers = {this.state.whiteFallenSoldiers}\r\n              blackFallenSoldiers = {this.state.blackFallenSoldiers}\r\n              />\r\n            }\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"icons-attribution\">\r\n          <div> <small> Chess Icons And Favicon (extracted) By en:User:Cburnett [<a href=\"http://www.gnu.org/copyleft/fdl.html\">GFDL</a>, <a href=\"http://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA-3.0</a>, <a href=\"http://opensource.org/licenses/bsd-license.php\">BSD</a> or <a href=\"http://www.gnu.org/licenses/gpl.html\">GPL</a>], <a href=\"https://commons.wikimedia.org/wiki/Category:SVG_chess_pieces\">via Wikimedia Commons</a> </small></div>\r\n        </div>\r\n      </div>\r\n\r\n     \r\n      );\r\n  }\r\n}","/*\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport Game from './components/game.js'\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);"],"sourceRoot":""}