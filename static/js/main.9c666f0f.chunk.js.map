{"version":3,"sources":["components/square.js","components/board.js","components/fallen-soldier-block.js","pieces/piece.js","pieces/bishop.js","pieces/king.js","pieces/knight.js","pieces/pawn.js","pieces/queen.js","pieces/rook.js","pieces/rock.js","pieces/obstacle.js","helpers/board-initialiser.js","components/game.js","index.js"],"names":["Square","props","className","shade","onClick","style","image","Board","row","col","squareShade","pos","this","squares","console","log","html_board","length","html_row","isEven","push","renderSquare","React","Component","num","FallenSoldierBlock","square","i","keyVal","piece","whiteFallenSoldiers","map","ws","index","blackFallenSoldiers","bs","Piece","player","iconUrl","backgroundImage","Bishop","src","dest","Math","abs","pathStart","pathEnd","incrementBy","path","King","Knight","Pawn","initialPositions","1","2","src_row","src_col","dest_row","dest_col","isDestEnemyOccupied","indexOf","Queen","mod","diff","Rook","Rock","initialiseChessBoard","rows","split","Array","rowArray","fill","squareArray","Game","state","sourceSelection","status","turn","setState","isMoveLegal","srcToDestPath","isLegal","handleClick","id","backgroundColor","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c666f0f.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\n\r\nexport default function Square(props) {\r\n    return (\r\n      <button className={\"square \" + props.shade}\r\n      onClick={props.onClick}\r\n      style={props.image}>\r\n      </button>\r\n    );\r\n  \r\n}","import React from 'react';\r\n\r\nimport '../index.css';\r\nimport Square from './square.js';\r\n\r\nexport default class Board extends React.Component {\r\n\r\n  renderSquare(row, col, squareShade) {\r\n\r\n    const pos = [row, col];\r\n    return <Square \r\n    //piece = {this.props.squares[i]} \r\n    image = {this.props.squares[row][col]? this.props.squares[row][col].image : null}\r\n    shade = {squareShade}\r\n\r\n    onClick={() => this.props.onClick(pos)}\r\n    />\r\n  }\r\n\r\n   render() {\r\n    console.log(\"BOARD UPDATE\")\r\n    const html_board = [];\r\n    for(let row = 0; row < this.props.squares.length; row++){\r\n      const html_row = [];\r\n      for(let col = 0; col < this.props.squares[row].length; col++){\r\n        const squareShade = (isEven(row) === isEven(col)) ? \"light-square\" : \"dark-square\";\r\n        html_row.push(this.renderSquare(row, col, squareShade));\r\n      }\r\n      html_board.push(<div className=\"board-row\">{html_row}</div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {html_board}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nfunction isEven(num){\r\n  return num % 2 === 0\r\n}","import React from 'react';\r\n\r\nimport '../index.css';\r\nimport Square from './square.js';\r\n\r\nexport default class FallenSoldierBlock extends React.Component {\r\n\r\n  renderSquare(square, i, squareShade) {\r\n    return <Square\r\n      key={i}\r\n      keyVal={i}\r\n      piece={square}\r\n      style={square.image}\r\n    />\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">{this.props.whiteFallenSoldiers.map((ws, index) =>\r\n          this.renderSquare(ws, index)\r\n        )}</div>\r\n        <div className=\"board-row\">{this.props.blackFallenSoldiers.map((bs, index) =>\r\n          this.renderSquare(bs, index)\r\n        )}</div>\r\n      </div>\r\n    );\r\n  }\r\n}","export default class Piece {\r\n    constructor(player, iconUrl){\r\n      this.player = player;\r\n      //this.style = {backgroundImage: \"url('\"+iconUrl+\"')\"};\r\n      this.image = {backgroundImage: \"url('\"+iconUrl+\"')\"};\r\n    }\r\n  }","import Piece from './piece.js';\r\n\r\nexport default class Bishop extends Piece {\r\n  constructor(player){\r\n    super(player, (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\"));\r\n  }\r\n\r\n  isMovePossible(src, dest){\r\n    return (Math.abs(src - dest) % 9 === 0 || Math.abs(src - dest) % 7 === 0);\r\n  }\r\n\r\n  /**\r\n   * get path between src and dest (src and dest exclusive)\r\n   * @param  {num} src  \r\n   * @param  {num} dest \r\n   * @return {[array]}      \r\n   */\r\n  getSrcToDestPath(src, dest){\r\n    let path = [], pathStart, pathEnd, incrementBy;\r\n    if(src > dest){\r\n      pathStart = dest;\r\n      pathEnd = src;\r\n    }\r\n    else{\r\n      pathStart = src;\r\n      pathEnd = dest;\r\n    }\r\n    if(Math.abs(src - dest) % 9 === 0){\r\n      incrementBy = 9;\r\n      pathStart += 9;\r\n    }\r\n    else{\r\n      incrementBy = 7;\r\n      pathStart += 7;\r\n    }\r\n\r\n    for(let i = pathStart; i < pathEnd; i+=incrementBy){\r\n      path.push(i);\r\n    }\r\n    return path;\r\n  }\r\n}","import Piece from './piece.js';\r\n\r\nexport default class King extends Piece {\r\n\r\n    constructor(player){\r\n      super(\r\n        player, \r\n        (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg\")\r\n        );\r\n    }\r\n\r\n    isMovePossible (src, dest) {\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n}","import Piece from './piece.js';\r\n\r\nexport default class Knight extends Piece {\r\n  constructor(player){\r\n    super(player, (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg\"));\r\n  }\r\n\r\n  isMovePossible(src, dest){\r\n    return (src - 17 === dest || \r\n      src - 10 === dest || \r\n      src + 6 === dest || \r\n      src + 15 === dest || \r\n      src - 15 === dest || \r\n      src - 6 === dest || \r\n      src + 10 === dest || \r\n      src + 17 === dest);\r\n  }\r\n\r\n  /**\r\n   * always returns empty array because of jumping\r\n   * @return {[]}\r\n   */\r\n  getSrcToDestPath(){\r\n    return [];\r\n  }\r\n}","import Piece from './piece.js';\r\n\r\nexport default class Pawn extends Piece {\r\n  constructor(player){\r\n    super(player, (player === 1?  \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\"));\r\n    this.initialPositions = {\r\n      1: [48, 49, 50, 51, 52, 53, 54, 55],\r\n      2: [8, 9, 10, 11, 12, 13, 14, 15]\r\n    }\r\n  }\r\n\r\n  isMoveLegal(src, dest) {\r\n    const src_row = src[0];\r\n    const src_col = src[1];\r\n    const dest_row = dest[0];\r\n    const dest_col = dest[1];\r\n    console.log(src_row + \",\" + src_col + \" --> \" + dest_row + \",\" + dest_col);\r\n    console.log(dest_row)\r\n    console.log(src_row + -1*this.player)\r\n    if (dest_row == src_row - 1*(-1*this.player)) {\r\n      console.log(\"LEGAL MOVE!\");\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  isMovePossible(src, dest, isDestEnemyOccupied){\r\n\r\n    if(this.player === 1){\r\n      if((dest === src - 8 && !isDestEnemyOccupied) || (dest === src - 16 && this.initialPositions[1].indexOf(src) !== -1)){\r\n        return true;\r\n      }\r\n      else if(isDestEnemyOccupied && (dest === src - 9 || dest === src - 7)){\r\n        return true;\r\n      }\r\n    }\r\n    else if(this.player === 2){\r\n      if((dest === src + 8 && !isDestEnemyOccupied) || (dest === src + 16 && this.initialPositions[2].indexOf(src) !== -1)){\r\n        return true;\r\n      }\r\n      else if(isDestEnemyOccupied && (dest === src + 9 || dest === src + 7)){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * returns array of one if pawn moves two steps, else returns empty array  \r\n   * @param  {[type]} src  [description]\r\n   * @param  {[type]} dest [description]\r\n   * @return {[type]}      [description]\r\n   */\r\n  getSrcToDestPath(src, dest){\r\n    if(dest === src - 16){\r\n      return [src - 8];\r\n    }\r\n    else if(dest === src + 16){\r\n      return [src + 8];\r\n    }\r\n    return [];\r\n  }\r\n}","import Piece from './piece.js';\r\n\r\nexport default class Queen extends Piece {\r\n  constructor(player){\r\n    super(player, (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg\"));\r\n  }\r\n\r\n  isMoveLegal(src, dest) {\r\n    return true;\r\n  }\r\n\r\n  isMovePossible(src, dest){\r\n    let mod = src % 8;\r\n    let diff = 8 - mod;\r\n    \r\n    return (Math.abs(src - dest) % 9 === 0 || Math.abs(src - dest) % 7 === 0) ||\r\n      (Math.abs(src - dest) % 8 === 0 || (dest >= (src - mod) && dest < (src + diff)));\r\n  }\r\n\r\n  /**\r\n   * get path between src and dest (src and dest exclusive)\r\n   * @param  {num} src  \r\n   * @param  {num} dest \r\n   * @return {[array]}      \r\n   */\r\n  getSrcToDestPath(src, dest){\r\n    let path = [], pathStart, pathEnd, incrementBy;\r\n    if(src > dest){\r\n      pathStart = dest;\r\n      pathEnd = src;\r\n    }\r\n    else{\r\n      pathStart = src;\r\n      pathEnd = dest;\r\n    }\r\n    if(Math.abs(src - dest) % 8 === 0){\r\n      incrementBy = 8;\r\n      pathStart += 8;\r\n    }\r\n    else if(Math.abs(src - dest) % 9 === 0){\r\n      incrementBy = 9;\r\n      pathStart += 9;\r\n    }\r\n    else if(Math.abs(src - dest) % 7 === 0){\r\n      incrementBy = 7;\r\n      pathStart += 7;\r\n    }\r\n    else{\r\n      incrementBy = 1;\r\n      pathStart += 1;\r\n    }\r\n\r\n    for(let i = pathStart; i < pathEnd; i+=incrementBy){\r\n      path.push(i);\r\n    }\r\n    return path;\r\n  }\r\n}","import Piece from './piece.js';\r\n\r\nexport default class Rook extends Piece {\r\n  constructor(player){\r\n    super(player, (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"));\r\n  }\r\n\r\n  isMovePossible(src, dest){\r\n    let mod = src % 8;\r\n    let diff = 8 - mod;\r\n    return (Math.abs(src - dest) % 8 === 0 || (dest >= (src - mod) && dest < (src + diff)));\r\n  }\r\n\r\n  /**\r\n   * get path between src and dest (src and dest exclusive)\r\n   * @param  {num} src  \r\n   * @param  {num} dest \r\n   * @return {[array]}      \r\n   */\r\n  getSrcToDestPath(src, dest){\r\n    let path = [], pathStart, pathEnd, incrementBy;\r\n    if(src > dest){\r\n      pathStart = dest;\r\n      pathEnd = src;\r\n    }\r\n    else{\r\n      pathStart = src;\r\n      pathEnd = dest;\r\n    }\r\n    if(Math.abs(src - dest) % 8 === 0){\r\n      incrementBy = 8;\r\n      pathStart += 8;\r\n    }\r\n    else{\r\n      incrementBy = 1;\r\n      pathStart += 1;\r\n    }\r\n\r\n    for(let i = pathStart; i < pathEnd; i+=incrementBy){\r\n      path.push(i);\r\n    }\r\n    return path;\r\n  }\r\n}","import Obstacle from './obstacle.js';\r\nexport default class Rock extends Obstacle {\r\n    constructor(player){\r\n        //super(player,\"react-chess/src/pieces/rock.png\");\r\n        super(player, \"http://t3.gstatic.com/images?q=tbn:ANd9GcReN9KWqKEGl0uRkdBWgcl-LaLK_8ecIzuBAhVBx9H82E40amLbEMYrZTc5fsgf4jxEpbAJaaV5znMbXHevmM0\");\r\n    }\r\n}\r\n","export default class Obstacle {\r\n    constructor(player, iconUrl) {\r\n        this.image = {backgroundImage: \"url(\"+iconUrl+\")\"};\r\n        this.player = player;\r\n    }\r\n}","import Bishop from '../pieces/bishop.js';\r\nimport King from '../pieces/king.js';\r\nimport Knight from '../pieces/knight.js';\r\nimport Pawn from '../pieces/pawn.js';\r\nimport Queen from '../pieces/queen.js';\r\nimport Rook from '../pieces/rook.js';\r\nimport Rock from '../pieces/rock.js';\r\n\r\nconst A = 0;\r\nconst B = 1;\r\nconst C = 2;\r\n/*\r\nexport default function initialiseChessBoard() {\r\n  const squares = Array(72).fill(null);\r\n\r\n  for (let i = 8; i < 16; i++) {\r\n    squares[i] = new Pawn(2);\r\n    squares[i + 40] = new Pawn(1);\r\n  }\r\n  squares[0] = new Rook(2);\r\n  squares[7] = new Rook(2);\r\n  squares[56] = new Rook(1);\r\n  squares[63] = new Rook(1);\r\n\r\n  squares[1] = new Knight(2);\r\n  squares[6] = new Knight(2);\r\n  squares[57] = new Knight(1);\r\n  squares[62] = new Knight(1);\r\n\r\n  squares[2] = new Bishop(2);\r\n  squares[5] = new Bishop(2);\r\n  squares[58] = new Bishop(1);\r\n  squares[61] = new Bishop(1);\r\n\r\n  squares[3] = new Queen(2);\r\n  squares[4] = new King(2);\r\n\r\n  squares[59] = new Queen(1);\r\n  squares[60] = new King(1);\r\n\r\n  return squares;\r\n\r\n}\r\n*/\r\n/*\r\nexport default function initialiseChessBoard() {\r\n  const squares = Array(8).fill(0).map(row => new Array(9).fill(null));\r\n  console.log(squares);\r\n\r\n  //ROOKS\r\n  squares[0][0] = new Rook(2);\r\n  squares[0][8] = new Rook(2);\r\n  squares[7][0] = new Rook(1);\r\n  squares[7][8] = new Rook(1);\r\n  \r\n  //KNIGHT\r\n  squares[0][1] = new Knight(2);\r\n  squares[0][7] = new Knight(2);\r\n  squares[7][1] = new Knight(1);\r\n  squares[7][7] = new Knight(1);\r\n  \r\n  //BISHOP\r\n  squares[0][2] = new Bishop(2);\r\n  squares[0][6] = new Bishop(2);\r\n  squares[7][2] = new Bishop(1);\r\n  squares[7][6] = new Bishop(1);\r\n\r\n  //QUEEN&KING\r\n  squares[0][3] = new Queen(2);\r\n  squares[0][5] = new King(2);\r\n  squares[7][3] = new Queen(1);\r\n  squares[7][5] = new King(1);\r\n\r\n  //PAWNS\r\n  for (let i = 0; i < squares[0].length; i++) {\r\n    if (i !== 4) {\r\n      squares[1][i] = new Pawn(2);\r\n      squares[6][i] = new Pawn(1);\r\n    }\r\n  }\r\n\r\n  return squares;\r\n\r\n}\r\n*/\r\n/*\r\nexport default function initialiseChessBoard() {\r\n\r\n  const squares = [\r\n    [new Rook(2), new Knight(2), new Bishop(2), new Queen(2), new King(2), new Bishop(2), new Knight(2), new Rook(2)],\r\n    [new Pawn(2), new Pawn(2),   new Pawn(2),   new Pawn(2),  new Pawn(2), new Pawn(2),   new Pawn(2),   new Pawn(2)],\r\n    [null,        null,          null,          null,         null,        null,          null,          null],\r\n    [null,        null,          null,          null,         null,        null,          null,          null],\r\n    [null,        null,          null,          null,         null,        null,          null,          null],\r\n    [null,        null,          null,          null,         null,        null,          null,          null],\r\n    [new Rook(1), new Knight(1), new Bishop(1), new Queen(1), new King(1), new Bishop(1), new Knight(1), new Rook(1)],\r\n    [new Pawn(1), new Pawn(1),   new Pawn(1),   new Pawn(1),  new Pawn(1), new Pawn(1),   new Pawn(1),   new Pawn(1)]\r\n  ];\r\n\r\n  return squares;\r\n\r\n}\r\n*/\r\nexport default function initialiseChessBoard() {\r\n\r\n  /* higher-case: WHITE, lower-case: BLACK\r\n  \r\n    - = Empty\r\n    P = Pawn\r\n    R = Rook\r\n    K = Knight\r\n    B = Bishop\r\n    Q = Queen\r\n    X = King\r\n        \r\n\r\n\r\n\r\n  */\r\n\r\n  const positions =\"----------- \"\r\n                  +\"-RKBQ-XBKR- \"\r\n                  +\"-PPPP-PPPP- \"\r\n                  +\"--##------- \"\r\n                  +\"--#----#--- \"\r\n                  +\"----------- \"\r\n                  +\"-#---##---# \"\r\n                  +\"-pppp-pppp- \"\r\n                  +\"-rkbq-xbkr- \"\r\n                  +\"-----------\"\r\n  //Splits into an array with each row\r\n  const rows = positions.split(\" \");\r\n  \r\n  //Makes an array SQUARES with length of ROWS\r\n  const squares = new Array(rows.length);\r\n  \r\n  //For each row\r\n  for (let row = 0; row < squares.length; row++) {\r\n\r\n    //Puts an array rowARRAY(cols) into each element of SQUARES(rows)\r\n    const rowArray = new Array(rows[row]).fill(null);\r\n    squares[row] = rowArray;\r\n    \r\n    //Splits the row-string into an array, each element being a square\r\n    const squareArray = rows[row].split(\"\");\r\n\r\n    for (let col = 0; col < squareArray.length; col++) {\r\n      \r\n      const square = squareArray[col];\r\n      switch(square) {\r\n\r\n        case '#':\r\n          squares[row][col] = new Rock(2);\r\n          break;\r\n\r\n        case 'r':\r\n          squares[row][col] = new Rook(-1);\r\n          break;      \r\n        case 'R':\r\n          squares[row][col] = new Rook(1);\r\n          break;\r\n        \r\n        case 'b': \r\n          squares[row][col] = new Bishop(-1);\r\n          break;\r\n        case 'B': \r\n          squares[row][col] = new Bishop(1);\r\n          break;\r\n\r\n        case 'k':\r\n          squares[row][col] = new Knight(-1);\r\n          break;\r\n        case 'K':\r\n          squares[row][col] = new Knight(1);\r\n          break;\r\n\r\n        case 'q': \r\n          squares[row][col] = new Queen(-1);\r\n          break;\r\n        case 'Q': \r\n          squares[row][col] = new Queen(1);\r\n          break;\r\n\r\n        case 'x': \r\n          squares[row][col] = new King(-1);\r\n          break;\r\n        case 'X': \r\n          squares[row][col] = new King(1);\r\n          break;\r\n          \r\n        case 'p': \r\n          squares[row][col] = new Pawn(-1);\r\n          break;\r\n        case 'P': \r\n          squares[row][col] = new Pawn(1);\r\n          break;\r\n\r\n        default: \r\n          squares[row][col] = null;\r\n          break;\r\n\r\n            \r\n      }\r\n\r\n\r\n      \r\n    }\r\n  }\r\n\r\n  console.log(squares);\r\n  \r\n  return squares;\r\n\r\n}","import React from 'react';\r\nimport '../index.css';\r\nimport Board from './board.js';\r\nimport FallenSoldierBlock from './fallen-soldier-block.js';\r\nimport initialiseChessBoard from '../helpers/board-initialiser.js';\r\n\r\nexport default class Game extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      squares: initialiseChessBoard(),\r\n      whiteFallenSoldiers: [],\r\n      blackFallenSoldiers: [],\r\n      player: 1,\r\n      sourceSelection: -1,\r\n      status: '',\r\n      turn: 'white'\r\n    }\r\n  }\r\n \r\n  handleClick(pos){\r\n    const row = pos[0];\r\n    const col = pos[1];\r\n    console.log(\"Click\");\r\n    //Clicks on board\r\n    const squares = this.state.squares;\r\n    \r\n    //Selection click\r\n    if(this.state.sourceSelection === -1){\r\n      console.log(\"Click: Selection\")\r\n      //Picks own piece\r\n      console.log(row + \",\" + col);\r\n      console.log(squares[row][col]);\r\n      if(squares[row][col]) {console.log(squares[row][col].player);}\r\n      \r\n      if(squares[row][col] && (squares[row][col].player === this.state.player)) {\r\n        this.setState({\r\n          status: \"Select Destination\",\r\n          sourceSelection: pos\r\n        });\r\n      }\r\n\r\n      //Picks not own piece\r\n      else {\r\n        this.setState({\r\n          status: \"Wrong Selection\",    \r\n        });\r\n      }\r\n    }\r\n      \r\n    //Destination Click\r\n    else {\r\n      console.log(\"Destination Click\");\r\n\r\n      const isMoveLegal = squares[this.state.sourceSelection[0]][this.state.sourceSelection[1]].isMoveLegal(this.state.sourceSelection, pos);\r\n      \r\n      if (!isMoveLegal) {\r\n        console.log(\"Your pawn cannot move there, choose another piece\");\r\n        this.setState({\r\n          status: \"Your pawn cannot move there, choose another piece\",\r\n          sourceSelection: -1\r\n        });\r\n      }\r\n\r\n\r\n      //Valid click (Empty)\r\n      else if (squares[row][col] == null) {\r\n        console.log(\"Empty click\")\r\n\r\n        squares[row][col] = squares[this.state.sourceSelection[0]][this.state.sourceSelection[1]]\r\n        squares[this.state.sourceSelection[0]][this.state.sourceSelection[1]] = null;\r\n       \r\n        this.setState({\r\n          status: \"Empty click\",\r\n          sourceSelection: -1\r\n        });\r\n      }\r\n\r\n      //Valid click (Enemy)\r\n      else if (squares[row][col].player && squares[row][col].player == this.state.player*-1) { \r\n        console.log(\"Enemy click\")\r\n      }\r\n      //Invalid click (Self)\r\n      else if (squares[row][col].player && squares[row][col].player == this.state.player) {\r\n        console.log(\"Invalid click: Self\");\r\n      }\r\n\r\n      //Invalid click (Obstacle)\r\n      else if (squares[row][col].player && squares[row][col].player == 2) {\r\n        console.log(\"Invalid click: Obstacle\");\r\n      }\r\n\r\n      else {\r\n        console.log(\"Unknown Click\")\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n/*\r\n    else if(this.state.sourceSelection > -1){\r\n      squares[this.state.sourceSelection].image = {...squares[this.state.sourceSelection].image, backgroundColor: null}\r\n    // Moves to own pieces\r\n      if(squares[i] && squares[i].player === this.state.player){\r\n        this.setState({\r\n          status: \"Wrong selection. Choose valid source and destination again.\",\r\n          sourceSelection: -1,\r\n        })\r\n        \r\n      }\r\n\r\n      // Moves to empty/opponent\r\n      else{\r\n        \r\n        const squares = this.state.squares.slice();\r\n        const whiteFallenSoldiers = this.state.whiteFallenSoldiers.slice();\r\n        const blackFallenSoldiers = this.state.blackFallenSoldiers.slice();\r\n        const isDestEnemyOccupied = squares[i]? true : false; \r\n        const isMovePossible = squares[this.state.sourceSelection].isMovePossible(this.state.sourceSelection, i, isDestEnemyOccupied);\r\n        const srcToDestPath = squares[this.state.sourceSelection].getSrcToDestPath(this.state.sourceSelection, i);\r\n        const isMoveLegal = this.isMoveLegal(srcToDestPath);\r\n\r\n\r\n          //Legal move\r\n        if(isMovePossible && isMoveLegal){\r\n\r\n          //Attack\r\n          if(squares[i] !== null){\r\n            if(squares[i].player === 1){\r\n              whiteFallenSoldiers.push(squares[i]);\r\n            }\r\n            else{\r\n              blackFallenSoldiers.push(squares[i]);\r\n            }\r\n          }\r\n\r\n          squares[i] = squares[this.state.sourceSelection];\r\n          squares[this.state.sourceSelection] = null;\r\n          let player = this.state.player === 1? 2: 1;\r\n          let turn = this.state.turn === 'white'? 'black' : 'white';\r\n          this.setState({\r\n            sourceSelection: -1,\r\n            squares: squares,\r\n            whiteFallenSoldiers: whiteFallenSoldiers,\r\n            blackFallenSoldiers: blackFallenSoldiers,\r\n            player: player,\r\n            status: '',\r\n            turn: turn\r\n          });\r\n        }\r\n\r\n        //Illegal move\r\n        else{\r\n          this.setState({\r\n            status: \"Wrong selection. Choose valid source and destination again.\",\r\n            sourceSelection: -1,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    */\r\n\r\n  }\r\n\r\n  /**\r\n   * Check all path indices are null. For one steps move of pawn/others or jumping moves of knight array is empty, so  move is legal.\r\n   * @param  {[type]}  srcToDestPath [array of board indices comprising path between src and dest ]\r\n   * @return {Boolean}               \r\n   */\r\n  isMoveLegal(srcToDestPath){\r\n    let isLegal = true;\r\n    for(let i = 0; i < srcToDestPath.length; i++){\r\n      if(this.state.squares[srcToDestPath[i]] !== null){\r\n        isLegal = false;\r\n      }\r\n    }\r\n    return isLegal;\r\n  }\r\n\r\n  render() {\r\n    console.log(\"GAME UPDATE\")\r\n    return (\r\n      <div>\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n            squares = {this.state.squares}\r\n            onClick = {(i) => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <h3>Turn</h3>\r\n            <div id=\"player-turn-box\" style={{backgroundColor: this.state.turn}}>\r\n  \r\n            </div>\r\n            <div className=\"game-status\">{this.state.status}</div>\r\n\r\n            <div className=\"fallen-soldier-block\">\r\n              \r\n              {<FallenSoldierBlock\r\n              whiteFallenSoldiers = {this.state.whiteFallenSoldiers}\r\n              blackFallenSoldiers = {this.state.blackFallenSoldiers}\r\n              />\r\n            }\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"icons-attribution\">\r\n          <div> <small> Chess Icons And Favicon (extracted) By en:User:Cburnett [<a href=\"http://www.gnu.org/copyleft/fdl.html\">GFDL</a>, <a href=\"http://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA-3.0</a>, <a href=\"http://opensource.org/licenses/bsd-license.php\">BSD</a> or <a href=\"http://www.gnu.org/licenses/gpl.html\">GPL</a>], <a href=\"https://commons.wikimedia.org/wiki/Category:SVG_chess_pieces\">via Wikimedia Commons</a> </small></div>\r\n        </div>\r\n      </div>\r\n\r\n     \r\n      );\r\n  }\r\n}","/*\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport Game from './components/game.js'\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);"],"sourceRoot":""}